<h1>Web Forms</h1>

<p>Web forms are the best way to get data from visitors.</p>

<h2>The Form Tag</h2>

<p>We use <code>&lt;form&gt;</code> to wrap all our form elements (called 'controls'). It takes <code>action</code> and <code>method</code> attributes, which is where the form data will be sent when the form is submitted and how it will be submitted; in the example below it will be sent to 'process.php' using the 'get' method:</p>

<pre class="prettyprint linenums languague-php">
&lt;form action="process.php" method="get"&gt;
	&lt;input type="text" name="firstname" /&gt;
	&lt;input type="submit" value="Send" /&gt;
&lt;/form&gt;
</pre>

<p>The form contains two controls: a text input and a submit button. When the user clicks the 'submit' button the page will then redirect to the 'process.php' page.</p>

<h2>Input Names</h2>

<p>The page recieving the form will then have the form elements as variables, though you <strong>must</strong> have a 'firstname' attribute on the form control. This will then be the name of the variable. You access the variables within a <strong>super global</strong> array. This defaults to 'get'. We access this using <code>$_GET['control_name']</code></p>

<pre class="prettyprint linenums languague-php">$name = $_GET['firstname'];
</pre>

<p><strong>GET</strong> will pass the variable value as part of the URL as key-value pairs: 'process.php?firstname=John'</p>

<p>The other method we use is <strong>POST</strong>, this will send the variables as a separate (and 'hidden') packet. We access POST variables from the <code>$_POST</code> super global:</p>

<pre class="prettyprint linenums languague-php">
$name = $_POST['firstname'];
</pre>
