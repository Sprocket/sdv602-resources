<h1>Array Functions</h1>

<h2>array_merge</h2>

<p>This will merge two or more array and return the new array.</p>

<pre class="prettyprint linenums languague-php">
$array_one = array(1,2,3);
$array_two = array(4,5,6);

$array_three = array_merge($array_one,$array_two);

print_r($array_three);
// Array ( [0] =&gt; 1 [1] =&gt; 2 [2] =&gt; 3 [3] =&gt; 4 [4] =&gt; 5 [5] =&gt; 6 )
</pre>

<p>When a value is repeated in simple arrays the item will be added twice</p>

<pre class="prettyprint linenums languague-php">
$array_four = array(&#039;carrot&#039;,&#039;apple&#039;,&#039;banana&#039;);
$array_five = array(&#039;carrot&#039;,&#039;sausage&#039;,&#039;brocoli&#039;);

$array_six = array_merge($array_four,$array_five);
print_r($array_six);
// Array ( [0] =&gt; carrot [1] =&gt; apple [2] =&gt; banana [3] =&gt; carrot [4] =&gt; sausage [5] =&gt; brocoli )
</pre>

<p>When keys clash the array defined later provides the ultimate value.</p>

<pre class="prettyprint linenums languague-php">
$mikes_colours = array(
	&#039;car&#039;		=&gt; &#039;red&#039;,
	&#039;house&#039;		=&gt; &#039;green&#039;,
	&#039;motor bike&#039;	=&gt; &#039;blue&#039;
	);

$sallys_colours = array(
	&#039;car&#039;		=&gt; &#039;red&#039;,
	&#039;house&#039;		=&gt; &#039;white&#039;,
	&#039;push bike&#039;	=&gt; &#039;pink&#039;
	);

$combined_colours = array_merge($mikes_colours,$sallys_colours);

print_r($combined_colours);

// Array (
	[car] =&gt; red
	[house] =&gt; white
	[motor bike] =&gt; blue
	[push bike] =&gt; pink
	)
</pre>


<h2>list</h2>
<p>List is useful for converting array items into standalone variables. It accepts new names for the variables and the array you want to break up.</p>

<pre class="prettyprint linenums languague-php">
$person = [&quot;John&quot;, &quot;Doe&quot;];
list($first_name, $last_name) = $person;

echo $first_name; // John
echo $last_name; // Doe
</pre>



<h3>Count</h3>
<p>You can count the number of items using the <code>count</code> function:</p>

<pre class="prettyprint linenums languague-php">
echo &#039;There are &#039;.count($letters).&#039; items in the $letters array&#039;;
// 7
</pre>

<h3>Sum</h3>
<p>This will add all the values and return the result</p>
<pre class="prettyprint linenums languague-php">
echo &#039;Sum of values: &lt;strong&gt;array_sum&lt;/strong&gt;&lt;br&gt;&#039;;
echo array_sum($numbers);
</pre>


<h3>Range</h3>
<p>This will fill an array with numbers within the defined numbers</p>
<pre class="prettyprint linenums languague-php">
$range = range(1, 10); // 1, 2, 3, 4, 5, 6, 7, 8, 9, 10
print_r($range);
Array
(
    [0] =&gt; 1
    [1] =&gt; 2
    [2] =&gt; 3
    [3] =&gt; 4
    [4] =&gt; 5
    [5] =&gt; 6
    [6] =&gt; 7
    [7] =&gt; 8
    [8] =&gt; 9
    [9] =&gt; 10
)
</pre>
<p>Notice how the indices (on the left) are one less than the value (on the right). This is because arrays are zero indexed.</p>

<h3>Shuffle</h3>
<p>This will shuffle an array into a random order.</p>
<pre class="prettyprint linenums languague-php">
echo &#039;1 to 10 mixed up: &lt;strong&gt;shuffle&lt;/strong&gt;&lt;br&gt;&#039;;
shuffle($range);
print_r($range);
</pre>

<h3>Getting a random value</h3>
<p>There isn't a function in PHP that will give you a random value but we can use <code>array_rand</code> to get a random key from an array, and then use that result to select the value:</p>
<pre class="prettyprint linenums languague-php">
echo &#039;Random number from 1 to 20: &lt;strong&gt;array_rand&lt;/strong&gt; (gives a random key, not the value)&lt;br&gt;&#039;;
$random_key = array_rand($range);
echo $range[$random_key];
</pre>

<ul class="notes-links">
	<li><a href="http://nz.php.net/count">count</a></li>
	<li><a href="http://nz.php.net/sum">sum</a></li>
	<li><a href="http://nz.php.net/array_rand">array_rand</a></li>
	<li><a href="http://nz.php.net/shuffle">shuffle</a></li>
	<li><a href="http://nz.php.net/range">range</a></li>
	<li><a href="http://nz.php.net/manual/en/function.array-merge.php">array_merge()</a></li>
	<li><a href="http://nz.php.net/manual/en/function.list.php">list()</a></li>
</ul>
